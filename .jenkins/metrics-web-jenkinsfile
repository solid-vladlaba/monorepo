pipeline {
    agent {
        docker {
            image "cirrusci/flutter:1.22.0-12.1.pre"
            reuseNode true
        }
    }

    environment {
        CODECOV_CONVERTER_URL = 'https://github.com/platform-platform/monorepo/releases/download/coverage-converter-snapshot/coverage_converter_linux'
        WORKING_DIR = 'metrics/web'
        WEB_APP_USER_EMAIL = credentials('web-app-user-email')
        WEB_APP_USER_PASSWORD = credentials('web-app-user-password')
    }

    stages {
        stage('Starting') {
            steps {
                echo "Running Metrics Web build ${env.BUILD_ID} on ${env.JENKINS_URL}..."
                echo "This build environment:"
                sh "printenv"
            }
        }

        stage('Configure Flutter') {
            agent {
                docker {
                    image "cirrusci/flutter:1.22.0-12.1.pre"
                    reuseNode true
                }
            }
            steps {
                echo "Configuring Flutter for Web..."
                sh "flutter --version"
                sh "flutter config --enable-web && flutter doctor"
            }
        }

        stage('Get dependencies') {
            steps {
                echo "Fetching dependencies..."
                dir("${WORKING_DIR}") {
                    sh "flutter pub get"
                }
            }
        }

        stage('Flutter analyze') {
            steps {
                echo "Analyzing code..."
                dir("${WORKING_DIR}") {
                    sh "flutter analyze"
                }
            }
        }

        stage('Flutter test') {
            steps {
                echo "Running tests..."
                dir("${WORKING_DIR}") {
                    sh "flutter test --coverage --coverage-path build/coverage.info"
                }
            }
        }

        stage('Flutter driver test') {
            agent {
                docker {
                    image "google/dart:2.10.0-110.5.beta"
                }
            }

            steps {
                echo "Running driver tests..."
                dir("${WORKING_DIR}") {
                    sh "dart test_driver/main.dart --no-verbose --store-logs-to=build/logs --email=$WEB_APP_USER_EMAIL --password=$WEB_APP_USER_PASSWORD"
                }
            }
        }

        stage('Download coverage tool') {
            steps {
                echo "Downloading coverage converter tool..."
                dir("${WORKING_DIR}") {
                    sh "curl -o coverage -k ${CODECOV_CONVERTER_URL} -L"
                    sh "chmod a+x coverage"
                }
            }
        }

        stage('Convert coverage report') {
            steps {
                echo "Converting code coverage report..."
                dir("${WORKING_DIR}") {
                    sh "./coverage lcov -i build/coverage.info -o coverage-summary.json"
                }
            }
        }

        stage('Export coverage report') {
            steps {
                echo "Uploading code coverage artifact..."
                archiveArtifacts 'metrics/web/coverage-summary.json'
            }
        }
    }
}
